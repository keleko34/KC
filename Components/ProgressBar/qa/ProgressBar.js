/********************************* *  ProgressBar *  Created by Keleko34 *  Shows the progress of a given event ********************************/var CreateProgressBar = (function(){	function CreateProgressBar(){      /* BUILD SECTION */            var template = "<!-- ProgressBar html -->";            var viewmodel = (function(){              function ProgressBar_vm(){                this.Node_Type = 'ProgressBar';                this.mainclass = ko.observable('ProgressBar');                /* Place Properties Here */                /* important! this is what ties this viewmodel to the main class,                  * whenever a new vm is made it calls its constructor which is the                 * main class constructor */                this.methods = this.constructor();                this.methods.call();              }              /* Place Prototypes here */              return ProgressBar_vm;            }());            /* BluePrint Include */            var blueprint = {            register_ProgressBar:function register_ProgressBar(CreateProgressBar,viewModel,template){              if(typeof define === 'function' && define.amd){                define('CreateProgressBar',[],function(){return CreateProgressBar});                define([],function(){return CreateProgressBar;});              }              else if(typeof module === "object" && module.exports){                module.exports = CreateProgressBar;              }              viewmodel.prototype.constructor = CreateProgressBar;              if(ko && !ko.components.isRegistered('ProgressBar')){                ko.components.register('ProgressBar',{viewModel:viewmodel,template:template});              }            }            }            /* End Blueprint Include */      /* END BUILD SECTION */      /* Add Private _variables here */      function ProgressBar(){        /* 'this' in the constructor refers to the viewmodel         * whenever you update something in code always call the constructor for updating the viewmodel */        /* Update viewmodel properties here */      }      /* add methods for updating and type checking viewmodel properties */      return ProgressBar;	}    blueprint.register_ProgressBar(CreateProgressBar,viewmodel,template);	return CreateProgressBar;}());
